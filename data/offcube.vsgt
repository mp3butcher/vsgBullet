#vsga 1.1.11
Root id=1 vsg::Group
{
  userObjects 1
  key "Name"
  object id=2 vsg::stringValue
  {
    userObjects 0
    properties 0 0 0 1 1 1 0 -1 0
    value "OffOriginCube"
  }
  children 1
  vsg::Node id=3 vsg::Group
  {
    userObjects 1
    key "Name"
    object id=4 vsg::stringValue
    {
      userObjects 0
      properties 0 0 0 1 1 1 0 -1 0
      value "OffOriginCube"
    }
    children 1
    vsg::Node id=5 vsg::CullNode
    {
      userObjects 0
      bound 2 2 2 1.73205077648
      child id=6 vsg::StateGroup
      {
        userObjects 0
        children 1
        vsg::Node id=7 vsg::VertexIndexDraw
        {
          userObjects 0
          firstBinding 0
          NumArrays 3
          Array id=8 vsg::vec3Array
          {
            userObjects 0
            properties 0 12 0 1 1 1 0 -1 0
            size 24
            storage id=0
            data 1 3 1 1 1 1 1 1 3 1 3 3
             1 1 1 3 1 1 3 1 3 1 1 3
             3 1 1 3 3 1 3 3 3 3 1 3
             3 3 1 1 3 1 1 3 3 3 3 3
             1 1 3 3 1 3 3 3 3 1 3 3
             3 1 1 1 1 1 1 3 1 3 3 1
          }
          Array id=9 vsg::vec3Array
          {
            userObjects 0
            properties 0 12 0 1 1 1 0 -1 0
            size 24
            storage id=0
            data -1 0 0 -1 0 0 -1 0 0 -1 0 0
             0 -1 0 0 -1 0 0 -1 0 0 -1 0
             1 0 0 1 0 0 1 0 0 1 0 0
             0 1 0 0 1 0 0 1 0 0 1 0
             0 0 1 0 0 1 0 0 1 0 0 1
             0 0 -1 0 0 -1 0 0 -1 0 0 -1
          }
          Array id=10 vsg::vec4Array
          {
            userObjects 0
            properties 0 16 0 1 1 1 0 -1 0
            size 1
            storage id=0
            data 1 1 1 1
          }
          Indices id=11 vsg::ushortArray
          {
            userObjects 0
            properties 0 2 0 1 1 1 0 -1 0
            size 36
            storage id=0
            data 0 1 2 0 2 3 4 5 6 4 6 7
             8 9 10 8 10 11 12 13 14 12 14 15
             16 17 18 16 18 19 20 21 22 20 22 23
          }
          indexCount 36
          instanceCount 1
          firstIndex 0
          vertexOffset 0
          firstInstance 0
        }
        stateCommands 1
        vsg::StateCommand id=12 vsg::BindGraphicsPipeline
        {
          userObjects 0
          slot 0
          pipeline id=13 vsg::GraphicsPipeline
          {
            userObjects 0
            layout id=14 vsg::PipelineLayout
            {
              userObjects 0
              flags 0
              setLayouts 1
              descriptorLayout id=15 vsg::DescriptorSetLayout
              {
                userObjects 0
                bindings 0
              }
              pushConstantRanges 1
              stageFlags 1
              offset 0
              size 128
            }
            stages 2
            vsg::ShaderStage id=16 vsg::ShaderStage
            {
              userObjects 0
              mask 18446744073709551615
              stage 1
              entryPointName "main"
              module id=17 vsg::ShaderModule
              {
                userObjects 0
                hints id=18 vsg::ShaderCompileSettings
                {
                  vulkanVersion 4194304
                  clientInputVersion 100
                  language 0
                  defaultVersion 450
                  target 65536
                  forwardCompatible 0
                  generateDebugInfo 0
                  optimize 0
                  defines 2
                  element "VSG_COLOR"
                  element "VSG_NORMAL"
                }
                source "#version 450
#pragma import_defines ( VSG_NORMAL, VSG_TANGENT, VSG_COLOR, VSG_TEXCOORD0, VSG_LIGHTING, VSG_NORMAL_MAP, VSG_BILLBOARD, VSG_TRANSLATE )
#extension GL_ARB_separate_shader_objects : enable
layout(push_constant) uniform PushConstants {
    mat4 projection;
    mat4 modelView;
    //mat3 normal;
} pc;
layout(location = 0) in vec3 osg_Vertex;
#ifdef VSG_NORMAL
layout(location = 1) in vec3 osg_Normal;
layout(location = 1) out vec3 normalDir;
#endif
#ifdef VSG_TANGENT
layout(location = 2) in vec4 osg_Tangent;
#endif
#ifdef VSG_COLOR
layout(location = 3) in vec4 osg_Color;
layout(location = 3) out vec4 vertColor;
#endif
#ifdef VSG_TEXCOORD0
layout(location = 4) in vec2 osg_MultiTexCoord0;
layout(location = 4) out vec2 texCoord0;
#endif
#ifdef VSG_LIGHTING
layout(location = 5) out vec3 viewDir;
layout(location = 6) out vec3 lightDir;
#endif
#ifdef VSG_TRANSLATE
layout(location = 7) in vec3 translate;
#endif


out gl_PerVertex{ vec4 gl_Position; };

void main()
{
    mat4 modelView = pc.modelView;

#ifdef VSG_TRANSLATE
    mat4 translate_mat = mat4(1.0, 0.0, 0.0, 0.0,
                              0.0, 1.0, 0.0, 0.0,
                              0.0, 0.0, 1.0, 0.0,
                              translate.x,  translate.y,  translate.z, 1.0);

    modelView = modelView * translate_mat;
#endif

#ifdef VSG_BILLBOARD
    vec3 lookDir = vec3(-modelView[0][2], -modelView[1][2], -modelView[2][2]);

    // rotate around local z axis
    float l = length(lookDir.xy);
    if (l>0.0)
    {
        float inv = 1.0/l;
        float c = lookDir.y * inv;
        float s = lookDir.x * inv;

        mat4 rotation_z = mat4(c,   -s,  0.0, 0.0,
                               s,   c,   0.0, 0.0,
                               0.0, 0.0, 1.0, 0.0,
                               0.0, 0.0, 0.0, 1.0);

        modelView = modelView * rotation_z;
    }
#endif

    gl_Position = (pc.projection * modelView) * vec4(osg_Vertex, 1.0);

#ifdef VSG_TEXCOORD0
    texCoord0 = osg_MultiTexCoord0.st;
#endif
#ifdef VSG_NORMAL
    vec3 n = (modelView * vec4(osg_Normal, 0.0)).xyz;
    normalDir = n;
#endif
#ifdef VSG_LIGHTING
    vec4 lpos = /*osg_LightSource.position*/ vec4(0.0, 0.25, 1.0, 0.0);
#ifdef VSG_NORMAL_MAP
    vec3 t = (modelView * vec4(osg_Tangent.xyz, 0.0)).xyz;
    vec3 b = cross(n, t);
    vec3 dir = -vec3(modelView * vec4(osg_Vertex, 1.0));
    viewDir.x = dot(dir, t);
    viewDir.y = dot(dir, b);
    viewDir.z = dot(dir, n);
    if (lpos.w == 0.0)
        dir = lpos.xyz;
    else
        dir += lpos.xyz;
    lightDir.x = dot(dir, t);
    lightDir.y = dot(dir, b);
    lightDir.z = dot(dir, n);
#else
    viewDir = -vec3(modelView * vec4(osg_Vertex, 1.0));
    if (lpos.w == 0.0)
        lightDir = lpos.xyz;
    else
        lightDir = lpos.xyz + viewDir;
#endif
#endif
#ifdef VSG_COLOR
    vertColor = osg_Color;
#endif
}
"
                code 428
                 119734787 65536 524299 58 0 131089 1 393227 1 1280527431 1685353262 808793134
                 0 196622 0 1 720911 0 4 1852399981 0 21 29 42
                 52 54 56 196611 2 450 589828 1096764487 1935622738 1918988389 1600484449 1684105331
                 1868526181 1667590754 29556 262149 4 1852399981 0 327685 10 1701080941 1701402220 119
                 393221 11 1752397136 1936617283 1953390964 115 393222 11 0 1785688688 1769235301 28271
                 393222 11 1 1701080941 1701402220 119 196613 13 25456 393221 19 1348430951
                 1700164197 2019914866 0 393222 19 0 1348430951 1953067887 7237481 196613 21 0
                 327685 29 1600615279 1953654102 30821 196613 40 110 327685 42 1600615279 1836216142
                 27745 327685 52 1836216174 1766091873 114 327685 54 1953654134 1869377347 114 327685
                 56 1600615279 1869377347 114 196679 11 2 262216 11 0 5 327752
                 11 0 7 16 327752 11 0 35 0 262216 11 1
                 5 327752 11 1 7 16 327752 11 1 35 64 196679
                 19 2 327752 19 0 11 0 262215 29 30 0 262215
                 42 30 1 262215 52 30 1 262215 54 30 3 262215
                 56 30 3 131091 2 196641 3 2 196630 6 32 262167
                 7 6 4 262168 8 7 4 262176 9 7 8 262174
                 11 8 8 262176 12 9 11 262203 12 13 9 262165
                 14 32 1 262187 14 15 1 262176 16 9 8 196638
                 19 7 262176 20 3 19 262203 20 21 3 262187 14
                 22 0 262167 27 6 3 262176 28 1 27 262203 28
                 29 1 262187 6 31 1065353216 262176 37 3 7 262176 39
                 7 27 262203 28 42 1 262187 6 44 0 262176 51
                 3 27 262203 51 52 3 262203 37 54 3 262176 55
                 1 7 262203 55 56 1 327734 2 4 0 3 131320
                 5 262203 9 10 7 262203 39 40 7 327745 16 17
                 13 15 262205 8 18 17 196670 10 18 327745 16 23
                 13 22 262205 8 24 23 262205 8 25 10 327826 8
                 26 24 25 262205 27 30 29 327761 6 32 30 0
                 327761 6 33 30 1 327761 6 34 30 2 458832 7
                 35 32 33 34 31 327825 7 36 26 35 327745 37
                 38 21 22 196670 38 36 262205 8 41 10 262205 27
                 43 42 327761 6 45 43 0 327761 6 46 43 1
                 327761 6 47 43 2 458832 7 48 45 46 47 44
                 327825 7 49 41 48 524367 27 50 49 49 0 1
                 2 196670 40 50 262205 27 53 40 196670 52 53 262205
                 7 57 56 196670 54 57 65789 65592
              }
              NumSpecializationConstants 0
            }
            vsg::ShaderStage id=19 vsg::ShaderStage
            {
              userObjects 0
              mask 18446744073709551615
              stage 16
              entryPointName "main"
              module id=20 vsg::ShaderModule
              {
                userObjects 0
                hints id=18
                source "#version 450
#pragma import_defines ( VSG_NORMAL, VSG_COLOR, VSG_TEXCOORD0, VSG_LIGHTING, VSG_MATERIAL, VSG_DIFFUSE_MAP, VSG_OPACITY_MAP, VSG_AMBIENT_MAP, VSG_NORMAL_MAP, VSG_SPECULAR_MAP )
#extension GL_ARB_separate_shader_objects : enable
#ifdef VSG_DIFFUSE_MAP
layout(binding = 0) uniform sampler2D diffuseMap;
#endif
#ifdef VSG_OPACITY_MAP
layout(binding = 1) uniform sampler2D opacityMap;
#endif
#ifdef VSG_AMBIENT_MAP
layout(binding = 4) uniform sampler2D ambientMap;
#endif
#ifdef VSG_NORMAL_MAP
layout(binding = 5) uniform sampler2D normalMap;
#endif
#ifdef VSG_SPECULAR_MAP
layout(binding = 6) uniform sampler2D specularMap;
#endif

#ifdef VSG_MATERIAL
layout(binding = 10) uniform MaterialData
{
    vec4 ambientColor;
    vec4 diffuseColor;
    vec4 specularColor;
    float shininess;
} material;
#endif

#ifdef VSG_NORMAL
layout(location = 1) in vec3 normalDir;
#endif
#ifdef VSG_COLOR
layout(location = 3) in vec4 vertColor;
#endif
#ifdef VSG_TEXCOORD0
layout(location = 4) in vec2 texCoord0;
#endif
#ifdef VSG_LIGHTING
layout(location = 5) in vec3 viewDir;
layout(location = 6) in vec3 lightDir;
#endif
layout(location = 0) out vec4 outColor;

void main()
{
#ifdef VSG_DIFFUSE_MAP
    vec4 base = texture(diffuseMap, texCoord0.st);
#else
    vec4 base = vec4(1.0,1.0,1.0,1.0);
#endif
#ifdef VSG_COLOR
    base = base * vertColor;
#endif
#ifdef VSG_MATERIAL
    vec3 ambientColor = material.ambientColor.rgb;
    vec3 diffuseColor = material.diffuseColor.rgb;
    vec3 specularColor = material.specularColor.rgb;
    float shininess = material.shininess;
#else
    vec3 ambientColor = vec3(0.1,0.1,0.1);
    vec3 diffuseColor = vec3(1.0,1.0,1.0);
    vec3 specularColor = vec3(0.3,0.3,0.3);
    float shininess = 16.0;
#endif
#ifdef VSG_AMBIENT_MAP
    ambientColor *= texture(ambientMap, texCoord0.st).r;
#endif
#ifdef VSG_SPECULAR_MAP
    specularColor = texture(specularMap, texCoord0.st).rrr;
#endif
#ifdef VSG_LIGHTING
#ifdef VSG_NORMAL_MAP
    vec3 nDir = texture(normalMap, texCoord0.st).xyz*2.0 - 1.0;
    nDir.g = -nDir.g;
#else
    vec3 nDir = normalDir;
#endif
    vec3 nd = normalize(nDir);
    vec3 ld = normalize(lightDir);
    vec3 vd = normalize(viewDir);
    vec4 color = vec4(0.01, 0.01, 0.01, 1.0);
    color.rgb += ambientColor;
    float diff = max(dot(ld, nd), 0.0);
    color.rgb += diffuseColor * diff;
    color *= base;
    if (diff > 0.0)
    {
        vec3 halfDir = normalize(ld + vd);
        color.rgb += base.a * specularColor *
            pow(max(dot(halfDir, nd), 0.0), shininess);
    }
#else
    vec4 color = base;
    color.rgb *= diffuseColor;
#endif
    outColor = color;
#ifdef VSG_OPACITY_MAP
    outColor.a *= texture(opacityMap, texCoord0.st).r;
#endif

    // crude version of AlphaFunc
    if (outColor.a==0.0) discard;
}
"
                code 388
                 119734787 65536 524299 61 0 131089 1 393227 1 1280527431 1685353262 808793134
                 0 196622 0 1 524303 4 4 1852399981 0 14 47 60
                 196624 4 7 196611 2 450 589828 1096764487 1935622738 1918988389 1600484449 1684105331
                 1868526181 1667590754 29556 262149 4 1852399981 0 262149 9 1702060386 0 327685
                 14 1953654134 1869377347 114 393221 19 1768058209 1131703909 1919904879 0 393221 22
                 1717987684 1130722165 1919904879 0 393221 24 1667592307 1918987381 1869377347 114 327685 28
                 1852401779 1936027241 115 262149 30 1869377379 114 327685 47 1131705711 1919904879 0
                 327685 60 1836216174 1766091873 114 262215 14 30 3 262215 47 30
                 0 262215 60 30 1 131091 2 196641 3 2 196630 6
                 32 262167 7 6 4 262176 8 7 7 262187 6 10
                 1065353216 458796 7 11 10 10 10 10 262176 13 1 7
                 262203 13 14 1 262167 17 6 3 262176 18 7 17
                 262187 6 20 1036831949 393260 17 21 20 20 20 393260 17
                 23 10 10 10 262187 6 25 1050253722 393260 17 26 25
                 25 25 262176 27 7 6 262187 6 29 1098907648 262165 36
                 32 0 262187 36 37 0 262187 36 40 1 262187 36
                 43 2 262176 46 3 7 262203 46 47 3 262187 36
                 49 3 262176 50 3 6 262187 6 53 0 131092 54
                 262176 59 1 17 262203 59 60 1 327734 2 4 0
                 3 131320 5 262203 8 9 7 262203 18 19 7 262203
                 18 22 7 262203 18 24 7 262203 27 28 7 262203
                 8 30 7 196670 9 11 262205 7 12 9 262205 7
                 15 14 327813 7 16 12 15 196670 9 16 196670 19
                 21 196670 22 23 196670 24 26 196670 28 29 262205 7
                 31 9 196670 30 31 262205 17 32 22 262205 7 33
                 30 524367 17 34 33 33 0 1 2 327813 17 35
                 34 32 327745 27 38 30 37 327761 6 39 35 0
                 196670 38 39 327745 27 41 30 40 327761 6 42 35
                 1 196670 41 42 327745 27 44 30 43 327761 6 45
                 35 2 196670 44 45 262205 7 48 30 196670 47 48
                 327745 50 51 47 49 262205 6 52 51 327860 54 55
                 52 53 196855 57 0 262394 55 56 57 131320 56 65788
                 131320 57 65789 65592
              }
              NumSpecializationConstants 0
            }
            pipelineStates 6
            vsg::GraphicsPipelineState id=21 vsg::VertexInputState
            {
              userObjects 0
              mask 18446744073709551615
              NumBindings 3
              binding 0
              stride 12
              inputRate 0
              binding 1
              stride 12
              inputRate 0
              binding 2
              stride 16
              inputRate 1
              NumAttributes 3
              location 0
              binding 0
              format 106
              offset 0
              location 1
              binding 1
              format 106
              offset 0
              location 3
              binding 2
              format 109
              offset 0
            }
            vsg::GraphicsPipelineState id=22 vsg::InputAssemblyState
            {
              userObjects 0
              mask 18446744073709551615
              topology 3
              primitiveRestartEnable 0
            }
            vsg::GraphicsPipelineState id=23 vsg::RasterizationState
            {
              userObjects 0
              mask 18446744073709551615
              depthClampEnable 0
              rasterizerDiscardEnable 0
              polygonMode 0
              cullMode 2
              frontFace 0
              depthBiasEnable 0
              depthBiasConstantFactor 1
              depthBiasClamp 0
              depthBiasSlopeFactor 1
              lineWidth 1
            }
            vsg::GraphicsPipelineState id=24 vsg::MultisampleState
            {
              userObjects 0
              mask 18446744073709551615
              rasterizationSamples 1
              sampleShadingEnable 0
              minSampleShading 0
              sampleMasks 0
              alphaToCoverageEnable 0
              alphaToOneEnable 0
            }
            vsg::GraphicsPipelineState id=25 vsg::ColorBlendState
            {
              userObjects 0
              mask 18446744073709551615
              logicOp 3
              logicOpEnable 0
              attachments 1
              blendEnable 0
              srcColorBlendFactor 0
              dstColorBlendFactor 0
              colorBlendOp 0
              srcAlphaBlendFactor 0
              dstAlphaBlendFactor 0
              alphaBlendOp 0
              colorWriteMask 15
              blendConstants 0 0 0 0
            }
            vsg::GraphicsPipelineState id=26 vsg::DepthStencilState
            {
              userObjects 0
              mask 18446744073709551615
              depthTestEnable 1
              depthWriteEnable 1
              depthCompareOp 4
              depthBoundsTestEnable 0
              stencilTestEnable 0
              front.failOp 0
              front.passOp 0
              front.depthFailOp 0
              front.compareOp 0
              front.compareMask 0
              front.writeMask 0
              front.reference 0
              back.failOp 0
              back.passOp 0
              back.depthFailOp 0
              back.compareOp 0
              back.compareMask 0
              back.writeMask 0
              back.reference 0
              minDepthBounds 0
              maxDepthBounds 1
            }
            subpass 0
          }
        }
        prototypeArrayState id=0
      }
    }
  }
}
